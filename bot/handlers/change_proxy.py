from aiogram import types

from bot import dp, user_states
from modules import database


@dp.callback_query(lambda call: call.data.startswith("change_proxy"))
async def change_proxy(call: types.CallbackQuery):
    user_id = call.from_user.id
    account_id = call.data.split(":")[-1]
    user_states[user_id] = f'new_proxy:{account_id}'

    markup_buttons = []
    markup_buttons.append([types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main_menu")])

    markup = types.InlineKeyboardMarkup(inline_keyboard=markup_buttons)

    await call.message.edit_text(f"üîΩ *–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ (ip:port:login:password), –ª–∏–±–æ '-' –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∫—Å–∏:*",
                                    parse_mode="Markdown", reply_markup=markup)
    

@dp.message(lambda message: user_states.get(message.from_user.id) and user_states.get(message.from_user.id).startswith('new_proxy:'))
async def new_proxy(message: types.Message):
    user_id = message.from_user.id
    account_id = int(user_states[user_id].split(":")[-1])

    if message.text != '-':
        parts = message.text.split(':')
        if len(parts) != 4:
            await message.answer("‚ùå *–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–∫—Å–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.*\n\n"
                                "üåê `ip:port:login:password`", parse_mode="Markdown")
            return
        
        await database.update_user(account_id, 'proxy_data', message.text)
    else:
        await database.update_user(account_id, 'proxy_data', None)

    user_states[user_id] = None

    markup_buttons = []
    markup_buttons.append([types.InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])

    markup = types.InlineKeyboardMarkup(inline_keyboard=markup_buttons)

    await message.answer("‚úÖ *–ü—Ä–æ–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!*", parse_mode="Markdown", reply_markup=markup)